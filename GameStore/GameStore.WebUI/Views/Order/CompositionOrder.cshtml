@model IEnumerable<GameStore.Domain.Entities.CompositionOrder>

    @{
        ViewBag.Title = "CompositionOrder";
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
    }

    <div class="panel panel-primary">
        <div class="panel-heading">Состав заказа</div>
        <table class="table table-striped table-condensed table-bordered">
            <tr>
                <th>ID</th>
                <th>Заказ №</th>
                <th>ID Игры</th>
                <th>Количество</th>
                <th style="min-width: 150px"></th>
            </tr>
            @if (Model == null)
            {
                <tr>
                    <td colspan="6" class="text-center">Нет заказов</td>
                </tr>
            }
            else
            {
                @*<tr>
                    <td>@Model.CompositionOrderID</td>
                    <td>@Model.OrderID</td>
                    <td>@Model.GameID</td>
                    <td>@Model.Count</td>
                </tr>*@
                foreach (var compositionOrder in Model)
                    {
                        <tr>
                            <td>@compositionOrder.CompositionOrderID</td>
                            <td>@compositionOrder.OrderID</td>
                            <td>@compositionOrder.GameID</td>
                            <td>@compositionOrder.Count</td>
                        </tr>
                    }
                <tr>
                    <td colspan="6" class="text-center">Нет заказов</td>
                </tr>
            }
        </table>
    </div>

    @*<div class="panel">
            <div class="panel-heading">
                <h3>Редактирование заказа </h3>
            </div>

            @using (Html.BeginForm("Edit", "Order",
                FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="panel-body">
                    @Html.HiddenFor(m => m.OrderID)
                    @foreach (var property in ViewData.ModelMetadata.Properties)
                    {
                        switch (property.PropertyName)
                        {
                            case "OrderID":
                                // Ничего не делать
                                break;
                            default:
                                <div class="form-group">
                                    <label>@(property.DisplayName ?? property.PropertyName)</label>
                                    @Html.TextBox(property.PropertyName, null,
                                        new { @class = "form-control" })
                                    @Html.ValidationMessage(property.PropertyName)
                                </div>
                                break;
                        }
                    }
                </div>
                <div class="panel-footer">
                    <input type="submit" value="Сохранить" class="btn btn-primary" />
                    @Html.ActionLink("Отменить изменения и вернуться к списку", "Index", null, new
                    {
                        @class = "btn btn-default"
                    })
                </div>
            }
        </div>*@
